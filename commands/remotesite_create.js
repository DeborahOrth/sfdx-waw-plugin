const path = require('path');
const os = require('os');

const forceUtils = require('../lib/forceUtils.js');
const forge = require('node-forge');
const certs = require('../lib/certs.js');
const fs = require('fs');

(function () {
    'use strict';

    module.exports = {
        topic: 'remotesite',
        command: 'create',
        description: 'Create a remote site setting in your org',
        help: 'help text for waw:remotesite:create',
        flags: [
            {
                name: 'targetusername',
                char: 'u',
                description: 'username or alias for the target org',
                hasValue: true
            },
            {
                name: 'name',
                char: 'n',
                description: 'remote site name',
                hasValue: true,
                required: true
            },
            {
                name: 'url',
                char: 'r',
                description: 'remote site URL',
                hasValue: true,
                required: true
            },
            {
                name: 'disableprotocolsecurity',
                char: 'p',
                description: 'disable protocol security',
                required: false,
                hasValue: false,
                type: 'flag'
            },
            {
                name: 'description',
                char: 'd',
                description: 'remote site description',
                hasValue: true,
                required: false
            },
            {
                name: 'active',
                char: 'a',
                description: 'active',
                required: false,
                hasValue: false,
                type: 'flag'
            }
        ],
        run(context) {

            const targetUsername = context.flags.targetusername;
            const remoteSiteName = context.flags.name;
            const remoteSiteUrl = context.flags.url;
            let remoteSiteDisableSecurity = false;
            if ( context.flags.disableprotocolsecurity) {
                remoteSiteDisableSecurity = true;
            }
            let remoteSiteIsActive = false;
            if( context.flags.active) {
                remoteSiteIsActive = true;
            }
            let remoteSiteDescription = context.flags.description;
            if (!remoteSiteDescription) {
                remoteSiteDescription = 'generated by waw:remotesite:create';
            }

            forceUtils.getOrg(targetUsername, (org) => {

                org.force._getConnection(org, org.config).then((conn) => {

                    let metadata = [{
                        description: remoteSiteDescription,
                        fullName: remoteSiteName,
                        url: remoteSiteUrl,
                        disableProtocolSecurity: remoteSiteDisableSecurity,
                        isActive: remoteSiteIsActive
                    }];

                    conn.metadata.create('RemoteSiteSetting', metadata, (createErr, results) => {
                        if (createErr) {
                            console.log(createErr);
                        } else if (results.success) {
                            conn.metadata.read('RemoteSiteSetting', remoteSiteName, (readErr, metadataResult) => {
                                if (readErr) {
                                    console.log(readErr);
                                } else {
                                    console.log(JSON.stringify(metadataResult));
                                }
                            });
                        } else {
                            console.log(results);
                        }
                    });
                });
            });
        }
    };
}());